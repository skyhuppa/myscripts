name: Builder
on:
  workflow_dispatch:
    inputs:
      Enable_cache:
        description: "Whether to enable cacheï¼Œtrue or false"
        required: true
        default: "true"
        
env:
  RECOVERY_NAME: 'Orangefox'
  ProductFileHeader: 'twrp'
  DT_LINK: 'https://github.com/skyhuppa/Realme_8_RMX3085 -b fox_11.0'
  DEVICE: 'RMX3085'
  DEVICE_PATH: 'device/realme/RMX3085'
  FOX_BRANCH: 'fox_12.1'
  FOX_SYNC: 'https://github.com/skyhuppa/sync'
  FOX_SYNC_PATH: sync'
  FOX_THEME: 'https://github.com/skyhuppa/theme'
  FOX_THEME_PATH: 'bootable/recovery/gui/theme'
  target: recoveryimage
  WorkSpace: WorkSpace
  TZ: Asia/Shanghai
  Author: ${{github.actor}}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: "Cleanup Environment"
        uses: rokibhasansagar/slimhub_actions@main

      - name: Prepare the environment
        run: |
           sudo apt update
           sudo apt -y upgrade
           sudo apt -y install adb autoconf axel gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib build-essential libstdc++6 clang cmake expat zlib1g-dev libpng-dev rsync libssl-dev bison flex aria2 make automake zip wget curl git libc6-dev lib32ncurses5-dev libncurses5-dev libncursesw5-dev libncurses5 libwxgtk3.0-gtk3-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev python-is-python3 fastboot flex g++ g++-multilib gawk gcc gnupg htop libtinfo5 libcap-dev libexpat1-dev libgmp-dev libmpc-dev libmpfr-dev libtool maven ncurses-dev patch patchelf pkg-config pngquant re2c subversion texinfo unzip w3m lzip libxml-simple-perl libswitch-perl apt-utils gh
      
      - run: | 
             download_url=https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
             wget -O $RUNNER_TEMP/sdk_package.zip $download_url
  
      - name: Setup SSH Keys
        if: ${{ startsWith(github.event.inputs.FOX_SYNC, 'git@github.com') }}
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: |
              ${{ secrets.SSH_PRIVATE_KEY }}
              
      - name: Install repo
        run: |
          mkdir ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          sudo ln -sf ~/bin/repo /usr/bin/repo        
          
#      - name: Sync recovery source
#        run: |
#          mkdir ${{env.WorkSpace}}
#          cd ${{env.WorkSpace}}
#          git config --global user.name "Skyhuppa"
#          git config --global user.email "skyhuppa@hotmail.co.uk"
#          repo init -u ${{env.Rec_url}} --depth=1 --groups=all,-notdefault,-device,-darwin,-x86,-mips
#          repo sync -j$(nproc --all)
          
      - name: fox sync
        run: |
         mkdir ${{env.WorkSpace}}
         cd ${{env.WorkSpace}}
         git clone ${{env.FOX_SYNC}} 
         cd sync
         bash orangefox_sync.sh --branch 12.1 --path ~/fox_12.1

      - name: fox theme
        run: |
          git clone ${{env.FOX_THEME}} ${{env.FOX_THEME_PATH}}

      - name: Sync device tree
        run: |
          cd ${{env.WorkSpace}}
          git clone ${{env.DT_LINK}} --depth=1 --single-branch ${{env.DEVICE_PATH}}

      - name: Show tree
        run: tree -C -d -L 3

      - name: Restore cache
        uses: actions/cache@v3
        if: (github.event.inputs.Enable_cache == 'true' && github.event.inputs.Enable_cache  != 'false') || contains(github.event.action, 'Enable_cache')
        with:
          path: |
            ~/.ccache
            ${{env.WorkSpace}}/out
          key: ${{runner.os}}-${{env.DT_LINK}}-${{env.FOX_SYNC}}-${{env.FOX_THEME}}
          restore-keys: |
            ${{runner.os}}-${{env.DT_LINK}}-${{env.FOX_SYNC}}-${{env.FOX_THEME}}
            
      - name: Setup ccache
       # uses: skyhuppa/setup-ccache@master
        uses: alexjurkiewicz/setup-ccache@master
        if: (github.event.inputs.Enable_cache == 'true' && github.event.inputs.Enable_cache  != 'false') || contains(github.event.action, 'Enable_cache')
        with:
          max-size: 5G
          extra-config: |
            keep_comments_cpp = true
  
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
           swap-size-gb: 12
            
      - name: Build ${{env.RECOVERY_NAME}}
        run: |
          cd ${{env.WorkSpace}}/${{env.DEVICE_PATH}}
          source build/envsetup.sh
          export ALLOW_MISSING_DEPENDENCIES=true
          export FOX_USE_TWRP_RECOVERY_IMAGE_BUILDER=1
          export LC_ALL="C"
          lunch ${{env.ProductFileHeader}}_${{env.DEVICE}}-eng && mka adbd recoveryimage
        shell: bash

      - name: Get info
        id: info
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m-%d-%H-%M")"
          echo "::set-output name=OutFolder::"${{env.WorkSpace}}/out/target/product/${{env.DEVICE}}""
        shell: bash

#      - name: Show Space Info
#       run: |
#          cd ${{steps.info.outputs.OutFolder}}
#          sudo rm -rf ${{env.RECOVERY_NAME}}_for_${{env.DEVICE}}_by_${{env.Author}}_*.zip
#          sudo zip -r9 ${{env.RECOVERY_NAME}}_for_${{env..DEVICE}}_by_${{env.Author}}_${{github.run_id}}.zip recovery.img

      - name: Upload firmware directory
        uses: actions/upload-artifact@main
        with:
          name: ${{env.RECOVERY_NAME}}_for_${{env.DEVICE}}-${{github.run_id}}
          path: ${{steps.info.outputs.OutFolder}}/*.img
          
      - name: Upload Recovery to WeTransfer
        run: |
              curl -sL https://git.io/file-transfer | sh
              ./transfer wet ${{steps.info.outputs.OutFolder}}/*.zip   
            
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          keep_minimum_runs:
